using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using SkiaSharp;

// тестовый текст

namespace ShifrCOD
{
    public class Class1
    {
        public static SKBitmap ZashifrCOD(int x1, int y1, int np, int ds, int dt, string text)
        {
            string[] i1 = new string[] { " ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "а", "б", "в", "г", "д", "е", "ё", "ж", "з", "и", "й", "к", "л", "м", "н", "о", "п", "р", "с", "т", "у", "ф", "х", "ч", "ц", "ш", "щ", "ъ", "ы", "ь", "э", "ю", "я", "А", "Б", "В", "Г", "Д", "Е", "Ё", "Ж", "З", "И", "Й", "К", "Л", "М", "Н", "О", "П", "Р", "С", "Т", "У", "Ф", "Х", "Ц", "Ч", "Ш", "Щ", ",", "Ъ", "Ы", "Ь", "Э", "Ю", "Я", ".", "?", "!", ";", ":", "[", "]", "{", "}", "(", ")", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_", "=", "+", "-", "/", "*", "", "'", "&", "^", "%", "$", "#", "@", "№", "~", "`", " " };
            int[] R = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] G = new int[] { 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215 };
            int[] B = new int[] { 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215 };

            int xz;
            int q = 0;

            var image1 = new SKBitmap(100, 100);
            int x2, y2;
            Random rnd = new Random();
            //Color pixelColor = image1.GetPixel(x2, y2);

            for (x2 = 0; x2 < 100; x2++)
            {
                for (y2 = 0; y2 < 100; y2++)
                {
                    SKColor newColor = new SKColor(1, Convert.ToByte(rnd.Next(200, 215)), Convert.ToByte(rnd.Next(200, 215)), 255);
                    image1.SetPixel(x2, y2, newColor);
                }
            }


            try
            {
                if (np == 23)
                {
                    xz = x1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j <= 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString(i1[j]))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    x1++;
                                    if (x1 >= ds + xz)
                                    {
                                        x1 = xz;
                                        y1++;
                                    }
                                   // if (y1>=)
                                    q++;
                                }
                            }
                        }
                    }
                }

                if (np == 32)
                {
                    xz = y1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    y1++;
                                    if (y1 >= ds + xz)
                                    {
                                        y1 = xz;
                                        x1++;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

                if (np == 34)
                {
                    xz = y1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    y1++;
                                    if (y1 >= ds + xz)
                                    {
                                        y1 = xz;
                                        x1--;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

                if (np == 43)
                {
                    xz = x1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    x1--;
                                    if (x1 <= xz - ds)
                                    {
                                        x1 = xz;
                                        y1++;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

                if (np == 41)
                {
                    xz = x1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    x1--;
                                    if (x1 <= xz - ds)
                                    {
                                        x1 = xz;
                                        y1--;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

                if (np == 14)
                {
                    xz = y1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    y1--;
                                    if (y1 <= xz - ds)
                                    {
                                        y1 = xz;
                                        x1--;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

                if (np == 12)
                {
                    xz = y1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    y1--;
                                    if (y1 <= xz - ds)
                                    {
                                        y1 = xz;
                                        x1++;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

                if (np == 21)
                {
                    xz = x1;
                    while (q < dt)
                    {
                        for (int i = 0; i < dt; i++)
                        {
                            for (int j = 0; j < 158; j++)
                            {
                                if (Convert.ToString(text[i]) == Convert.ToString((i1[j])))
                                {
                                    SKColor nwColor = new SKColor(Convert.ToByte(R[j]), Convert.ToByte(G[j]), Convert.ToByte(B[j]), 255);
                                    image1.SetPixel(x1, y1, nwColor);
                                    x1++;
                                    if (x1 >= ds + xz)
                                    {
                                        x1 = xz;
                                        y1--;
                                    }
                                    q++;
                                }
                            }
                        }
                    }

                }

            }
            catch (Exception)
            {
                // MessageBox.Show("Введены не верные данные");
            }
            return(image1);
        }

        public static String RasshifrCOD(int x1, int y1, int np, int ds, SKBitmap img)
        {
            string[] i1 = new string[] { " ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "а", "б", "в", "г", "д", "е", "ё", "ж", "з", "и", "й", "к", "л", "м", "н", "о", "п", "р", "с", "т", "у", "ф", "х", "ч", "ц", "ш", "щ", "ъ", "ы", "ь", "э", "ю", "я", "А", "Б", "В", "Г", "Д", "Е", "Ё", "Ж", "З", "И", "Й", "К", "Л", "М", "Н", "О", "П", "Р", "С", "Т", "У", "Ф", "Х", "Ц", "Ч", "Ш", "Щ", ",", "Ъ", "Ы", "Ь", "Э", "Ю", "Я", ".", "?", "!", ";", ":", "[", "]", "{", "}", "(", ")", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_", "=", "+", "-", "/", "*", "", "'", "&", "^", "%", "$", "#", "@", "№", "~", "`", " " };
            int[] R = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] G = new int[] { 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 212, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215 };
            int[] B = new int[] { 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215 };

            string text = "";
            int xz;
            int i = 0;

            try
            {
                if (np == 23)
                {
                    xz = x1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                        }
                        x1++;
                        if (x1 >= ds + xz)
                        {
                            x1 = xz;
                            y1++;
                        }
                        i++;
                    }
                }

                if (np == 32)
                {
                    xz = y1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                        }

                        y1++;
                        if (x1 >= ds + xz)
                        {
                            y1 = xz;
                            x1++;
                        }
                        i++;
                    }
                }

                if (np == 34)
                {
                    xz = y1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                        }

                        y1++;
                        if (x1 >= ds + xz)
                        {
                            y1 = xz;
                            x1--;
                        }
                        i++;
                    }
                }

                if (np == 43)
                {
                    xz = x1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                        }

                        x1--;
                        if (x1 <= xz - ds)
                        {
                            x1 = xz;
                            y1++;
                        }
                        i++;
                    }
                }

                if (np == 41)
                {
                    xz = x1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                        }

                        x1--;
                        if (x1 <= xz - ds)
                        {
                            x1 = xz;
                            y1--;
                        }
                        i++;
                    }
                }

                if (np == 14)
                {
                    xz = y1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                        }

                        y1--;
                        if (x1 >= xz - ds)
                        {
                            y1 = xz;
                            x1--;
                        }
                        i++;
                    }
                }

                if (np == 12)
                {
                    xz = y1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                            x1++;
                        }

                        y1--;
                        if (x1 >= xz - ds)
                        {
                            x1 = xz;
                            y1++;
                        }
                        i++;
                    }
                }

                if (np == 21)
                {
                    xz = x1;
                    while (i <= 126)
                    {
                        SKColor nColor = img.GetPixel(x1, y1);
                        byte r1 = nColor.Red;
                        byte g1 = nColor.Green;
                        byte b1 = nColor.Blue;
                        for (int j = 1; j <= 158; j++)
                        {
                            if ((r1 == R[j]) && (g1 == G[j]) && (b1 == B[j]))
                            {
                                text = text + i1[j];
                            }
                            x1++;
                        }

                        x1++;
                        if (x1 >= ds + xz)
                        {
                            x1 = xz;
                            y1--;
                        }
                        i++;
                    }
                }
            }
            catch (Exception)
            {

                throw;
            }

            return (text);
        }

    }
}
